exit
# Octave 4.2.1, Mon Dec 18 01:01:05 2017 PST <gauravtyagi@Gauravs-MacBook-Pro.local>
# Octave 4.4.1, Sun Feb 17 19:48:14 2019 IST <gauravtyagi@gauravs-mbp>
a=[1,2;5,8]
pinv(a)
5+6
# Octave 4.4.1, Mon Feb 18 15:56:48 2019 IST <gauravtyagi@gauravs-mbp>
data = load('ex2data1.txt');
X = data(:, [1, 2]); y = data(:, 3);
cd ~/Downloads/
cd Workspace/Octave_Matlab/Octave_Matlab/machine-learning-ex
cd Workspace/Octave_Matlab/Octave_Matlab
ls
cd machine-learning-ex2
cd ex2
who
pwd
ata = load('ex2data1.txt');
X = data(:, [1, 2]); y = data(:, 3);
who
clear
who
data = load('ex2data1.txt');
X = data(:, [1, 2]); y = data(:, 3);
plotData(X, y);
[m, n] = size(X);
X = [ones(m, 1) X];
initial_theta = zeros(n + 1, 1);
costFunction(initial_theta, X, y);
costFunction(initial_theta, X, y);
costFunction(initial_theta, X, y);
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
test_theta = [-24; 0.2; 0.2];
costFunction(test_theta, X, y)
options = optimset('GradObj', 'on', 'MaxIter', 400);
[theta, cost] = ...
fminunc(@(t)(costFunction(t, X, y)), initial_theta, options);
theta
cost
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(initial_theta, X, y)
costFunction(test_theta, X, y)
costFunction(test_theta, X, y)
costFunction(initial_theta, X, y)O
# Octave 4.4.1, Sun Feb 24 08:33:59 2019 IST <gauravtyagi@gauravs-mbp>
cd ~/Downloads
cd Workspace/Octave_Matlab/Octave_Matlab/machine-learning-ex2
ls
cd ex2
ls
open ex2.m O
# Octave 4.4.1, Mon Feb 25 10:50:01 2019 IST <gauravtyagi@gauravs-mbp>
cd ~/Downloads/Workspace/Octave_Matlab/Octave_Matlab/machine-learning-ex3/ex3
input_layer_size  = 400;
num_labels = 10;  
load('ex3data1.mat');
m = size(X, 1);
rand_indices = randperm(m);
sel = X(rand_indices(1:100), :);
displayData(sel);
theta_t = [-2; -1; 1; 2];
X_t = [ones(5,1) reshape(1:15,5,3)/10];
y_t = ([1;0;1;0;1] >= 0.5);
lambda_t = 3;
[J grad] = lrCostFunction(theta_t, X_t, y_t, lambda_t);
J
gtad
grad
lambda = 0.1;
[all_theta] = oneVsAll(X, y, num_labels, lambda);
pred = predictOneVsAll(all_theta, X);
mean(double(pred == y)) * 100
submit.m
# Octave 4.4.1, Sun Mar 03 08:06:29 2019 IST <gauravtyagi@gauravs-mbp>
cd ~/Downloads/
ls
cd Workspace/Octave_Matlab/Octave_Matlab/machine-learning-ex7/ex7
load('ex7data2.mat');
K = 3; % 3 Centroids
initial_centroids = [3 3; 6 2; 8 5];
idx = findClosestCentroids(X, initial_centroids);
idx
idx(1:3)
centroids = computeCentroids(X, idx, K);
centroids
load('ex7data2.mat');
K = 3;
max_iters = 10;
initial_centroids = [3 3; 6 2; 8 5];
[centroids, idx] = runkMeans(X, initial_centroids, max_iters, true);
A = double(imread('bird_small.png'));
A = A / 255; % Divide by 255 so that all values are in the range 0 - 1
img_size = size(A);
X = reshape(A, img_size(1) * img_size(2), 3);
K = 16; 
max_iters = 10;
initial_centroids = kMeansInitCentroids(X, K);
initial_centroids = kMeansInitCentroids(X, K);
initial_centroids = kMeansInitCentroids(X, K);
initial_centroids = kMeansInitCentroids(X, K);
[centroids, idx] = runkMeans(X, initial_centroids, max_iters);
idx = findClosestCentroids(X, centroids);
X_recovered = centroids(idx,:);
X_recovered = reshape(X_recovered, img_size(1), img_size(2), 3);
subplot(1, 2, 1);
imagesc(A); 
title('Original');
subplot(1, 2, 2);
imagesc(X_recovered)
title(sprintf('Compressed, with %d colors.', K));
submit.m
# Octave 4.4.1, Wed Mar 13 01:50:58 2019 IST <gauravtyagi@gauravs-mbp>
load('ex8data1.mat');
cd ~/Downloads/
cd Workspace/Octave_Matlab/Octave_Matlab/machine-learning-ex8/ex8
load('ex8data1.mat');
plot(X(:, 1), X(:, 2), 'bx');
axis([0 30 0 30]);
xlabel('Latency (ms)');
ylabel('Throughput (mb/s)');[mu sigma2] = estimateGaussian(X);
[mu sigma2] = estimateGaussian(X);
mu
sigma2
p = multivariateGaussian(X, mu, sigma2);
p
pval = multivariateGaussian(Xval, mu, sigma2);
[epsilon F1] = selectThreshold(yval, pval);
[epsilon F1] = selectThreshold(yval, pval);
epsilon
F1
load('ex8data2.mat');
[mu sigma2] = estimateGaussian(X);
p = multivariateGaussian(X, mu, sigma2);
pval = multivariateGaussian(Xval, mu, sigma2);
[epsilon F1] = selectThreshold(yval, pval);
epsilon
F1
sum(p < epsilon)
submit.m
# Octave 4.4.1, Wed Mar 20 16:22:51 2019 PDT <gauravtyagi@Gauravs-MacBook-Pro.local>
